/*!
  \page urg_sensor_spec_page urg_sensor.c 実装仕様

  !!! 接続のとき

  !!! urg_connect() で発行する SCIP コマンド

  URG のデバイスと接続を行い、URG の状態が

  - SCIP 2.0 のモード
  - 距離データの送信が停止している状態

  になるようにする。\n
  この状態を、初期状態と呼ぶ。

  \dot
  !!! フローっぽい図を描く
  \enddot


  - "QT" コマンドを発行し、既存の通信コマンドの停止と SCIP 2.0 かの判定を行う。
    - エコーバックに続く応答が "00P" のとき
      - 既に SCIP 2.0 のモードで通信が停止しており、初期状態になっている
    \n \n
    - エコーバックに続く応答が "E" のとき
      - SCIP 1.0 のモードとみなす
        - "SCIP2.0" コマンドを発行することで、初期状態にする
    \n \n
    - エコーバックに続く応答が "0E" のとき
    - SCIP 2.0 のモードにおけるタイムスタンプのモードになっている
      - "TM2" を発行し、タイムスタンプのモードを抜けることで初期状態にする
    \n \n
    - 応答がないか、適切な応答がない場合
      - 接続先にセンサがないか、URG に接続されていない
      - ボーレートが異なっており、応答がない
      - 距離データの応答が返されている最中


    - !!! センサ１周分よりも長い時間だけタイムアウトを指定して、データの読み捨てを行う。
      - センサ１周分よりも長い時間を待つのは、...
      - データ詠み捨て後、"QT" の応答が返されるかで、URG かどうかの判定を行う
        - "QT" の応答が適切でなければ、センサが接続されていないかボーレートが違うと判断し、違うボーレートでの接続を試みる

      - !!! USB のときは、違うボーレートでの試行は行わなくてよい
        - !!! そもそも、接続できるはずなので、試行は行われないはず


  !!! 接続後は、PP を発行してパラメータを取得し、urg_t の構造体に情報を格納する。


  !!! 切断のとき

  !!! 切断する。
  !!! 切断時は、レーザが消灯し、計測をしていない状態になるようにする。


  !!! GD でのデータ取得
  !!! GD を発行し、受信を行う
  !!! GD を発行する前に、レーザが消灯状態になっていれば、laser_on() を呼び出してレーザを光らせる
  !!! 計測が終わっても、レーザは消灯しない


  !!! Mx 系のデータ取得
  !!! 受信したデータのみを格納するか、配列のサイズ全体に拡張して格納するかは、未定

  !!! タイムスタンプの同期について
*/
